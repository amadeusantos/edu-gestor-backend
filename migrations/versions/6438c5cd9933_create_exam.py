"""create exam

Revision ID: 6438c5cd9933
Revises: 9fb5f2b76229
Create Date: 2025-04-27 15:21:21.377995

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6438c5cd9933'
down_revision: Union[str, None] = '9fb5f2b76229'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exams',
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('is_finish', sa.Boolean(), nullable=False),
    sa.Column('is_recovery', sa.Boolean(), nullable=False),
    sa.Column('discipline_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exams_archived'), 'exams', ['archived'], unique=False)
    op.create_index(op.f('ix_exams_date'), 'exams', ['date'], unique=False)
    op.create_index(op.f('ix_exams_deleted'), 'exams', ['deleted'], unique=False)
    op.create_index(op.f('ix_exams_is_finish'), 'exams', ['is_finish'], unique=False)
    op.create_index(op.f('ix_exams_is_recovery'), 'exams', ['is_recovery'], unique=False)
    op.create_index(op.f('ix_exams_title'), 'exams', ['title'], unique=False)
    op.create_table('scores',
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('is_absent', sa.Boolean(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('exam_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scores_archived'), 'scores', ['archived'], unique=False)
    op.create_index(op.f('ix_scores_deleted'), 'scores', ['deleted'], unique=False)
    op.create_index(op.f('ix_scores_is_absent'), 'scores', ['is_absent'], unique=False)
    op.create_index(op.f('ix_scores_value'), 'scores', ['value'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_scores_value'), table_name='scores')
    op.drop_index(op.f('ix_scores_is_absent'), table_name='scores')
    op.drop_index(op.f('ix_scores_deleted'), table_name='scores')
    op.drop_index(op.f('ix_scores_archived'), table_name='scores')
    op.drop_table('scores')
    op.drop_index(op.f('ix_exams_title'), table_name='exams')
    op.drop_index(op.f('ix_exams_is_recovery'), table_name='exams')
    op.drop_index(op.f('ix_exams_is_finish'), table_name='exams')
    op.drop_index(op.f('ix_exams_deleted'), table_name='exams')
    op.drop_index(op.f('ix_exams_date'), table_name='exams')
    op.drop_index(op.f('ix_exams_archived'), table_name='exams')
    op.drop_table('exams')
    # ### end Alembic commands ###
